예제 1
매우 간단한 UI를 가지고 있음
명령어를 쳐서 파일 입출력을 할 수있는 콘솔 프로그램

뭘 만들까
[메인]
프로그램을 켜면
파일들의 제목들을 나열함.
10개씩 모둠으로 나눠 그중 첫번째의 모둠을 보여줌
{번호}{tab 들여쓰기}/ {파일명}


- 사용 가능한 명령어 (mee6 참고함)
!다음
!다음 [넘길 페이지 갯수]
!이전
!이전 [넘길 페이지 갯수]
!페이지 <이동할 페이지 갯수>
!열기 <파일명>
!지우기 <파일명>
!수정

!정렬 <방식(이름/시간)> [역순]
!폴더 <이름>
해당하는 이름의 폴더를 열거나,
폴더를 생성합니다.
!폴더 삭제 <이름>
!이동 <파일명> <폴더명>

[파일 모드]
저장된 파일의 내용을 보여준다
제목{tab 들여쓰기} / {파일 제목}
{페이지}{tab 들여쓰기}/ {이 줄에 저장된 문자열}
... 윗 줄 반복
- 사용 가능한 명령어
!종료
현재 적은 내용을 임시 파일에 저장하고, 프로그램을 종료한다.
스트림도 반드시 닫는다.
!뒤로 !메뉴 !메인
현재 내용으로 임시 파일을 생성하거나, 그것이 있으면 저장하고 메인으로 돌아간다
!취소
임시 파일을 삭제하고 메인으로 돌아간다
!저장
임시 파일의 내용을 원본에 뒤집어쓰고 메인으로 돌아간다
!저장 [새로운 제목]
임시 파일의 내용을 다른 이름으로 저장한다
!임시저장 !임시
현재 적고 있는 내용을 임시 파일에 저장한다
!제목 <새로운 제목>
!<숫자> <수정할 문자>
해당 라인에 문자열 수정
!!<추가할 문자>
새로운 라인에 문자열 추가 / 제목이 비어 있으면 제목을 수정.

!복붙 <파일명>
해당 이름의 파일의 내용을 가져와 현재 작업하고 있는 파일의 내용에 덮어씁니다.
아직 저장은 하지 않습니다.


고민해봐야 할 것
공백 문자열을 잘 다뤄야 함
문자와 문자 사이에 공백이 있는경우,
앞에 문자가 유효한 키워드면, 공백 뒤 문자열은 앞 키워드의 Argument로 집어넣음.
그렇지 않으면 덩어리로 판단

고민할 만한 클래스


메모 데이터
제목
내용 (리스트<문자열>)


문자열 읽는 함수
1. 문자열을 쪼갬.
2. 해당하는 함수를 호출함.
3. 2번째부터 함수를 넘김